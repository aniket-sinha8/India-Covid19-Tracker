{"version":3,"sources":["Components/StateWiseData/StateWise.js","Components/TotalData/TotalData.js","Components/TotalData/TodayTotal.js","Components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["columns","id","label","minWidth","useStyles","makeStyles","table","maxWidth","container","maxHeight","root","width","head","backgroundColor","color","fontSize","body","StateWise","classes","useState","data","setData","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","align","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","style","bold","TableBody","curElem","index","hover","role","tabIndex","state","confirmed","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","flexGrow","TotalData","Grid","spacing","item","xs","sm","lg","md","Card","variant","CardContent","Typography","TodayTotal","Dashboard","href","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df10c2d3.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n  { id: 'state', label: 'State', minWidth: 50 },\r\n  { id: 'confirmed', label: 'Confirmed', minWidth: 50 },\r\n  {\r\n    id: 'active',\r\n    label: 'Active',\r\n    minWidth: 20,\r\n  },\r\n  {\r\n    id: 'recovered',\r\n    label: 'Recovered',\r\n    minWidth: 50,\r\n  },\r\n  {\r\n    id: 'deaths',\r\n    label: 'Deaths',\r\n    minWidth: 50,\r\n  },\r\n  // {\r\n  //   id: 'updated',\r\n  //   label: 'Updated',\r\n  //   minWidth: 50,\r\n  // },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n      maxWidth: 1000,\r\n  },\r\n  container: {\r\n    maxHeight: '100%',\r\n  },\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  head: {\r\n     backgroundColor: \"#222222\",\r\n     color: '#fff',\r\n     fontSize: 20,\r\n  },\r\n  body: {\r\n      backgroundColor: \"#333333\",\r\n      fontSize: 18,\r\n      color: '#fff',\r\n  },\r\n});\r\n\r\n\r\n\r\nfunction StateWise() {\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const getCovidData = async () => {\r\n        const res = await fetch('https://api.covid19india.org/data.json');\r\n        const actualData = await res.json();\r\n        console.log(actualData.statewise);\r\n        setData(actualData.statewise)\r\n    }\r\n\r\n    useEffect(() => {\r\n            getCovidData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"schedules\" align=\"center\">\r\n            <div className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader className={classes.table} aria-label=\"sticky table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {columns.map((column) => (\r\n                        <TableCell\r\n                        className={classes.head}\r\n                        key={column.id}\r\n                        align=\"center\"\r\n                        style={{ minWidth: column.minWidth }}\r\n                        bold\r\n                        >\r\n                        {column.label}\r\n                        </TableCell>\r\n                    ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data.map((curElem, index) => (\r\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                            <TableCell className={classes.body} align=\"left\">{curElem.state}</TableCell>\r\n                            <TableCell className={classes.body} align=\"right\">{curElem.confirmed}(<span style={{color: \"#e6e600\"}}>{\"+\"}{curElem.deltaconfirmed}</span>)</TableCell>\r\n                            <TableCell className={classes.body} align=\"right\">{curElem.active}</TableCell>\r\n                            <TableCell className={classes.body} align=\"right\">{curElem.recovered}(<span style={{color: \"#00e600\"}}>{\"+\"}{curElem.deltarecovered}</span>)</TableCell>\r\n                            <TableCell className={classes.body} align=\"right\">{curElem.deaths}(<span style={{color: \"#e60000\"}}>{\"+\"}{curElem.deltadeaths}</span>)</TableCell>\r\n                            {/* <TableCell className={classes.head} align=\"center\">{curElem.lastupdatedtime}</TableCell> */}\r\n                        </TableRow>\r\n                    ))}\r\n\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            </div> \r\n        </div>\r\n        \r\n\r\n\r\n       \r\n        \r\n    )\r\n}\r\n\r\nexport default StateWise\r\n","import React, {useState, useEffect}  from 'react';\r\nimport './TotalData.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 270,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function TotalData() {\r\n  const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const getCovidData = async () => {\r\n        const res = await fetch('https://api.covid19india.org/data.json');\r\n        const actualData = await res.json();\r\n        console.log(actualData.statewise);\r\n        setData(actualData.statewise[0])\r\n    }\r\n\r\n    useEffect(() => {\r\n            getCovidData();\r\n    }, [])\r\n\r\n  return (\r\n    <div className=\"totalData\">      \r\n        <Grid container align=\"center\" spacing={1}>\r\n            <Grid item xs={12} sm={6} lg={3} md={3}>\r\n                <Card style={{backgroundColor: \"#e6e600\"}} className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h3\">\r\n                    Total\r\n                    </Typography>\r\n                    <Typography variant=\"h4\">\r\n                    {data.confirmed}\r\n                    </Typography>\r\n                </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6} lg={3} md={3}>\r\n                <Card style={{backgroundColor: \"#ffa500\"}} className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h3\">\r\n                    Active\r\n                    </Typography>\r\n                    <Typography variant=\"h4\">\r\n                    {data.active}\r\n                    </Typography>\r\n                </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} lg={3} md={3}>\r\n                <Card style={{backgroundColor: \"#00e600\"}} className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h3\">\r\n                    Recovered\r\n                    </Typography>\r\n                    <Typography variant=\"h4\">\r\n                    {data.recovered}\r\n                    </Typography>\r\n                </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} lg={3} md={3}>\r\n                <Card style={{backgroundColor: \"#e60000\"}} className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <Typography variant=\"h3\">\r\n                    Deaths\r\n                    </Typography>\r\n                    <Typography variant=\"h4\">\r\n                    {data.deaths}\r\n                    </Typography>\r\n                </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect}  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: '100%',\r\n    maxHeight: 500,\r\n    backgroundColor: '#222222',\r\n    color: '#fff',\r\n  },\r\n});\r\n\r\nexport default function TodayTotal() {\r\n  const classes = useStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const getCovidData = async () => {\r\n        const res = await fetch('https://api.covid19india.org/data.json');\r\n        const actualData = await res.json();\r\n        console.log(actualData.statewise);\r\n        setData(actualData.statewise[0])\r\n    }\r\n\r\n    useEffect(() => {\r\n            getCovidData();\r\n    }, [])\r\n\r\n  return (\r\n    <div className=\"todayTotal\">    \r\n                <Card className={classes.root} variant=\"outlined\">\r\n                    <CardContent>\r\n                        <h2>\r\n                        Today's Stats\r\n                        </h2>\r\n                        <p align=\"left\">\r\n                        New Cases: {\" \"}{data.deltaconfirmed}\r\n                        </p>\r\n                        <p align=\"left\">\r\n                        Recovered: {\" \"}{data.deltarecovered}\r\n                        </p>\r\n                        <p align=\"left\">\r\n                        Deaths: {\" \"}{data.deltadeaths}\r\n                        </p>\r\n                    </CardContent>\r\n                </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport StateWise from './StateWiseData/StateWise';\r\nimport TotalData from './TotalData/TotalData';\r\nimport TodayTotal from './TotalData/TodayTotal';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n  const classes = useStyles();\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography className=\"title\" variant=\"h2\">\r\n                India Covid19 Tracker\r\n            </Typography>\r\n\r\n\r\n            <TotalData />\r\n      \r\n            <Grid container align=\"center\" spacing={1}>\r\n                <Grid item xs={12} lg={10} md={8}>\r\n                <StateWise />\r\n                </Grid>\r\n                <Grid item xs={12} lg={2} md={4}>\r\n                <TodayTotal />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Typography className=\"footer\">\r\n                Copyright © 2021 | Made by <a href=\"https://aniketkumarsinha.tech/\" target=\"_blank\">Aniket Kumar Sinha</a>\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import './App.css';\nimport Dashboard from './Components/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}